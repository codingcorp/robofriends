{"version":3,"sources":["components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Component","App","_useState","useState","_useState2","Object","slicedToArray","setRobots","_useState3","_useState4","useEffect","fetch","then","response","json","users","robots","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","react_default","a","createElement","StrictMode","containers_App"],"mappings":"wOAE2BA,YCwDZC,MAlDf,WACE,IAAAC,EAO4BC,mBAAS,IAAGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAzBK,GAAFH,EAAA,GAAWA,EAAA,IAAAI,EACcL,mBAAS,IAAGM,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAAhCC,EAAA,GAAgBA,EAAA,GASlCC,oBAAU,kBACVC,MAAM,8CACLC,KAAK,SAAAC,GAAQ,OAAGA,EAASC,OACzBF,KAAK,SAAAG,GAAK,OAAIR,EAAU,CAACS,OAAQD,UA6BrBd,GC9CAgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAT,KAAAQ,EAAAE,KAAA,UAAqBV,KAAK,SAAAW,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,YCCDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,WAAU,KACfH,EAAAC,EAAAC,cAACE,EAAG,QAORrB","file":"static/js/main.b9c514ab.chunk.js","sourcesContent":["import React, {Component} from 'react'; \r\n\r\nclass ErrorBoundry extends Component {\r\n  constructor(props) {\r\n    super(props); \r\n    this.state = {\r\n      hasError: false\r\n    }\r\n  }\r\n\r\n  componentDidCatch(error, info){\r\n    this.setState({ hasError: true})\r\n  }\r\n\r\n  render(){\r\n    if (this.state.hasError) {\r\n      return <h1>Oooops. That is not good</h1>\r\n    }\r\n    return this.props.children\r\n  }\r\n}\r\n\r\nexport default ErrorBoundry; \r\n","import React, { useState, useEffect } from 'react'; \r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox'\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\n\r\n\r\nfunction App()  {\r\n  /* constructor() {\r\n    super()\r\n    this.state = {\r\n      robots: [], \r\n      searchfield: '',\r\n    }\r\n  }*/\r\n  const [robots, setRobots] = useState([])\r\n  const [searchfield, setSearchfield] = useState('')\r\n/*\r\n  componentDidMount(){\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then(response=> response.json()\r\n      .then(users => this.setState({robots: users})\r\n      )\r\n    )\r\n  } */\r\n  useEffect(() => \r\n  fetch('https://jsonplaceholder.typicode.com/users')\r\n  .then(response=> response.json()\r\n  .then(users => setRobots({robots: users})\r\n  )\r\n))\r\n\r\n  const onSearchChange = (event) => {\r\n    setSearchfield(event.target.value)\r\n    \r\n    const filteredRobots = robots.filter(robot =>{\r\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n    });\r\n    if (robots.length === 0){\r\n      return <h1>Loading</h1>\r\n    } else {\r\n      return (\r\n      <div className='tc'>\r\n        <h1 className='f1'>RoboFriends</h1>\r\n        <SearchBox searchChange={onSearchChange}/>\r\n        <Scroll>\r\n          <ErrorBoundry>\r\n            <CardList robots={filteredRobots}/>\r\n          </ErrorBoundry>\r\n        </Scroll>   \r\n      </div>     \r\n      )\r\n    }   \r\n  }\r\n}\r\n  \r\n\r\nexport default App(); ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'; \n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App/> \n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}